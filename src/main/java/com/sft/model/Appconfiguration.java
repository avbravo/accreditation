/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.sft.model;

import com.jmoordb.core.annotation.Column;
import com.jmoordb.core.annotation.Entity;
import com.jmoordb.core.annotation.Id;
import com.jmoordb.core.annotation.Referenced;
import com.jmoordb.core.annotation.enumerations.AutogeneratedActive;
import java.util.List;

/**
 *
 * @author avbravo
 */
@Entity()
public class Appconfiguration {

    @Id(autogeneratedActive = AutogeneratedActive.ON)
    private Long idappconfiguration;
    @Column
    private Boolean active;

    @Referenced(from = "applicative", localField = "idapplicative")
    private Applicative applicative;
    
    @Referenced(from = "role", localField = "idrole")
    private List<Role> role;

    

    public Appconfiguration() {
    }

    public Appconfiguration(Long idappconfiguration, Boolean active, Applicative applicative, List<Role> role) {
        this.idappconfiguration = idappconfiguration;
        this.active = active;
        this.applicative = applicative;
        this.role = role;
    }

    public List<Role> getRole() {
        return role;
    }

    public void setRole(List<Role> role) {
        this.role = role;
    }

 

   

   

    public Long getIdappconfiguration() {
        return idappconfiguration;
    }

    public void setIdappconfiguration(Long idappconfiguration) {
        this.idappconfiguration = idappconfiguration;
    }

    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Applicative getApplicative() {
        return applicative;
    }

    public void setApplicative(Applicative applicative) {
        this.applicative = applicative;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Appconfiguration{");
        sb.append("idappconfiguration=").append(idappconfiguration);
        sb.append(", active=").append(active);
        sb.append(", applicative=").append(applicative);
        sb.append(", role=").append(role);
        sb.append('}');
        return sb.toString();
    }

   

  

}
