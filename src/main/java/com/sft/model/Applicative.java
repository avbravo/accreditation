/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.sft.model;

import com.jmoordb.core.annotation.Column;
import com.jmoordb.core.annotation.Entity;
import com.jmoordb.core.annotation.Id;
import com.jmoordb.core.annotation.enumerations.AutogeneratedActive;

/**
 *
 * @author avbravo
 */
@Entity
public class Applicative {

    @Id(autogeneratedActive = AutogeneratedActive.ON)
    private Long idapplicative;
    @Column
    private Boolean active;

    @Column
    private String applicative;
    @Column
    private String description;

    @Column
    private String image;
    @Column
    private String path;
    @Column

    private String shortname;

    public Applicative() {
    }

    public Long getIdapplicative() {
        return idapplicative;
    }

    public void setIdapplicative(Long idapplicative) {
        this.idapplicative = idapplicative;
    }

    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public String getApplicative() {
        return applicative;
    }

    public void setApplicative(String applicative) {
        this.applicative = applicative;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public String getShortname() {
        return shortname;
    }

    public void setShortname(String shortname) {
        this.shortname = shortname;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Applicative{");
        sb.append("idapplicative=").append(idapplicative);
        sb.append(", active=").append(active);
        sb.append(", applicative=").append(applicative);
        sb.append(", description=").append(description);
        sb.append(", image=").append(image);
        sb.append(", path=").append(path);
        sb.append(", shortname=").append(shortname);
        sb.append('}');
        return sb.toString();
    }
    
    
    
}
